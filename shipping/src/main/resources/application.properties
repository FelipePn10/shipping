spring.application.name=${SPRING_APPLICATION_NAME}
server.port=${SERVER_PORT}

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}

jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM}

logging.level.org.springframework.security=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY}
logging.level.redirex.shipping=${LOGGING_LEVEL_REDIREX_SHIPPING}

#Esse valor é lido pela aplicação para calcular até quando o token será válido (para fazer um reset na senha do usuário).
password.reset.token.timeout.minutes=${PASSWORD_RESET_TOKEN}

spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
# Habilita a autenticação de SMTP
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_SMTP_AUTH}
# Habilita a criptografia TLS para transmissão segura de emails
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_SMTP_STARTTLS_ENABLE}

