services:
  postgres:
    image: postgres:15
    container_name: auth_postgres
    environment:
      POSTGRES_DB: authdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-backend
    working_dir: /app
    command: mvn spring-boot:run
    ports:
      - "8080:8080"
    volumes:
      - ../..:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/authdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres123

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge