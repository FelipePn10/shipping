services:
  db:
    image: postgres:16-alpine
    container_name: redirex_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - redirex-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: redirex_redis
    command: [
      "redis-server",
      "--requirepass", "${REDIS_PASSWORD}",
      "--appendonly", "yes"
    ]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - redirex-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ../..
      dockerfile: infraestructure/docker/Dockerfile
    container_name: redirex_backend
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - redirex-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      MAIL_HOST: ${MAIL_HOST}
      MAIL_PORT: ${MAIL_PORT}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      MAIL_FROM: ${MAIL_FROM}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      APP_FRONTEND_URL: ${APP_FRONTEND_URL}
      PASSWORD_RESET_TOKEN_TIMEOUT_MINUTES: ${PASSWORD_RESET_TOKEN_TIMEOUT_MINUTES}
      STRIPE_API_SECRET_KEY: ${STRIPE_API_SECRET_KEY}
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  redirex-network: